/*
	Copyright 2022 Loophole Labs

	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at

		   http://www.apache.org/licenses/LICENSE-2.0

	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
*/

// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAuthGithubParams creates a new GetAuthGithubParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAuthGithubParams() *GetAuthGithubParams {
	return &GetAuthGithubParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAuthGithubParamsWithTimeout creates a new GetAuthGithubParams object
// with the ability to set a timeout on a request.
func NewGetAuthGithubParamsWithTimeout(timeout time.Duration) *GetAuthGithubParams {
	return &GetAuthGithubParams{
		timeout: timeout,
	}
}

// NewGetAuthGithubParamsWithContext creates a new GetAuthGithubParams object
// with the ability to set a context for a request.
func NewGetAuthGithubParamsWithContext(ctx context.Context) *GetAuthGithubParams {
	return &GetAuthGithubParams{
		Context: ctx,
	}
}

// NewGetAuthGithubParamsWithHTTPClient creates a new GetAuthGithubParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAuthGithubParamsWithHTTPClient(client *http.Client) *GetAuthGithubParams {
	return &GetAuthGithubParams{
		HTTPClient: client,
	}
}

/*
GetAuthGithubParams contains all the parameters to send to the API endpoint

	for the get auth github operation.

	Typically these are written to a http.Request.
*/
type GetAuthGithubParams struct {

	/* Redirect.

	   Redirect
	*/
	Redirect string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get auth github params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAuthGithubParams) WithDefaults() *GetAuthGithubParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get auth github params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAuthGithubParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get auth github params
func (o *GetAuthGithubParams) WithTimeout(timeout time.Duration) *GetAuthGithubParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get auth github params
func (o *GetAuthGithubParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get auth github params
func (o *GetAuthGithubParams) WithContext(ctx context.Context) *GetAuthGithubParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get auth github params
func (o *GetAuthGithubParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get auth github params
func (o *GetAuthGithubParams) WithHTTPClient(client *http.Client) *GetAuthGithubParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get auth github params
func (o *GetAuthGithubParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRedirect adds the redirect to the get auth github params
func (o *GetAuthGithubParams) WithRedirect(redirect string) *GetAuthGithubParams {
	o.SetRedirect(redirect)
	return o
}

// SetRedirect adds the redirect to the get auth github params
func (o *GetAuthGithubParams) SetRedirect(redirect string) {
	o.Redirect = redirect
}

// WriteToRequest writes these params to a swagger request
func (o *GetAuthGithubParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param redirect
	qrRedirect := o.Redirect
	qRedirect := qrRedirect
	if qRedirect != "" {

		if err := r.SetQueryParam("redirect", qRedirect); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
