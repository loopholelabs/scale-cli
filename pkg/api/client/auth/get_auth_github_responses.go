// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/loopholelabs/scale-cli/pkg/api/client/models"
)

// GetAuthGithubReader is a Reader for the GetAuthGithub structure.
type GetAuthGithubReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthGithubReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthGithubOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAuthGithubBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthGithubInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthGithubOK creates a GetAuthGithubOK with default headers values
func NewGetAuthGithubOK() *GetAuthGithubOK {
	return &GetAuthGithubOK{}
}

/* GetAuthGithubOK describes a response with status code 200, with default header values.

OK
*/
type GetAuthGithubOK struct {
	Payload *models.ModelsAuthResponse
}

// IsSuccess returns true when this get auth github o k response has a 2xx status code
func (o *GetAuthGithubOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get auth github o k response has a 3xx status code
func (o *GetAuthGithubOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth github o k response has a 4xx status code
func (o *GetAuthGithubOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth github o k response has a 5xx status code
func (o *GetAuthGithubOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth github o k response a status code equal to that given
func (o *GetAuthGithubOK) IsCode(code int) bool {
	return code == 200
}

func (o *GetAuthGithubOK) Error() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubOK  %+v", 200, o.Payload)
}

func (o *GetAuthGithubOK) String() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubOK  %+v", 200, o.Payload)
}

func (o *GetAuthGithubOK) GetPayload() *models.ModelsAuthResponse {
	return o.Payload
}

func (o *GetAuthGithubOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ModelsAuthResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthGithubBadRequest creates a GetAuthGithubBadRequest with default headers values
func NewGetAuthGithubBadRequest() *GetAuthGithubBadRequest {
	return &GetAuthGithubBadRequest{}
}

/* GetAuthGithubBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAuthGithubBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get auth github bad request response has a 2xx status code
func (o *GetAuthGithubBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth github bad request response has a 3xx status code
func (o *GetAuthGithubBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth github bad request response has a 4xx status code
func (o *GetAuthGithubBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth github bad request response has a 5xx status code
func (o *GetAuthGithubBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth github bad request response a status code equal to that given
func (o *GetAuthGithubBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthGithubBadRequest) Error() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthGithubBadRequest) String() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthGithubBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAuthGithubBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthGithubInternalServerError creates a GetAuthGithubInternalServerError with default headers values
func NewGetAuthGithubInternalServerError() *GetAuthGithubInternalServerError {
	return &GetAuthGithubInternalServerError{}
}

/* GetAuthGithubInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAuthGithubInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get auth github internal server error response has a 2xx status code
func (o *GetAuthGithubInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth github internal server error response has a 3xx status code
func (o *GetAuthGithubInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth github internal server error response has a 4xx status code
func (o *GetAuthGithubInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth github internal server error response has a 5xx status code
func (o *GetAuthGithubInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get auth github internal server error response a status code equal to that given
func (o *GetAuthGithubInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthGithubInternalServerError) Error() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthGithubInternalServerError) String() string {
	return fmt.Sprintf("[GET /auth/github][%d] getAuthGithubInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthGithubInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetAuthGithubInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
