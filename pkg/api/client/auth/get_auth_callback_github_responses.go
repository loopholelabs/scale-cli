// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAuthCallbackGithubReader is a Reader for the GetAuthCallbackGithub structure.
type GetAuthCallbackGithubReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthCallbackGithubReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewGetAuthCallbackGithubFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 400:
		result := NewGetAuthCallbackGithubBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAuthCallbackGithubInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetAuthCallbackGithubFound creates a GetAuthCallbackGithubFound with default headers values
func NewGetAuthCallbackGithubFound() *GetAuthCallbackGithubFound {
	return &GetAuthCallbackGithubFound{}
}

/* GetAuthCallbackGithubFound describes a response with status code 302, with default header values.

Found
*/
type GetAuthCallbackGithubFound struct {
	Location string

	Payload string
}

// IsSuccess returns true when this get auth callback github found response has a 2xx status code
func (o *GetAuthCallbackGithubFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth callback github found response has a 3xx status code
func (o *GetAuthCallbackGithubFound) IsRedirect() bool {
	return true
}

// IsClientError returns true when this get auth callback github found response has a 4xx status code
func (o *GetAuthCallbackGithubFound) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth callback github found response has a 5xx status code
func (o *GetAuthCallbackGithubFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth callback github found response a status code equal to that given
func (o *GetAuthCallbackGithubFound) IsCode(code int) bool {
	return code == 302
}

func (o *GetAuthCallbackGithubFound) Error() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubFound  %+v", 302, o.Payload)
}

func (o *GetAuthCallbackGithubFound) String() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubFound  %+v", 302, o.Payload)
}

func (o *GetAuthCallbackGithubFound) GetPayload() string {
	return o.Payload
}

func (o *GetAuthCallbackGithubFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Location
	hdrLocation := response.GetHeader("Location")

	if hdrLocation != "" {
		o.Location = hdrLocation
	}

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthCallbackGithubBadRequest creates a GetAuthCallbackGithubBadRequest with default headers values
func NewGetAuthCallbackGithubBadRequest() *GetAuthCallbackGithubBadRequest {
	return &GetAuthCallbackGithubBadRequest{}
}

/* GetAuthCallbackGithubBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAuthCallbackGithubBadRequest struct {
	Payload string
}

// IsSuccess returns true when this get auth callback github bad request response has a 2xx status code
func (o *GetAuthCallbackGithubBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth callback github bad request response has a 3xx status code
func (o *GetAuthCallbackGithubBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth callback github bad request response has a 4xx status code
func (o *GetAuthCallbackGithubBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get auth callback github bad request response has a 5xx status code
func (o *GetAuthCallbackGithubBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get auth callback github bad request response a status code equal to that given
func (o *GetAuthCallbackGithubBadRequest) IsCode(code int) bool {
	return code == 400
}

func (o *GetAuthCallbackGithubBadRequest) Error() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthCallbackGithubBadRequest) String() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubBadRequest  %+v", 400, o.Payload)
}

func (o *GetAuthCallbackGithubBadRequest) GetPayload() string {
	return o.Payload
}

func (o *GetAuthCallbackGithubBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthCallbackGithubInternalServerError creates a GetAuthCallbackGithubInternalServerError with default headers values
func NewGetAuthCallbackGithubInternalServerError() *GetAuthCallbackGithubInternalServerError {
	return &GetAuthCallbackGithubInternalServerError{}
}

/* GetAuthCallbackGithubInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAuthCallbackGithubInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this get auth callback github internal server error response has a 2xx status code
func (o *GetAuthCallbackGithubInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get auth callback github internal server error response has a 3xx status code
func (o *GetAuthCallbackGithubInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get auth callback github internal server error response has a 4xx status code
func (o *GetAuthCallbackGithubInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get auth callback github internal server error response has a 5xx status code
func (o *GetAuthCallbackGithubInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get auth callback github internal server error response a status code equal to that given
func (o *GetAuthCallbackGithubInternalServerError) IsCode(code int) bool {
	return code == 500
}

func (o *GetAuthCallbackGithubInternalServerError) Error() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthCallbackGithubInternalServerError) String() string {
	return fmt.Sprintf("[GET /auth/callback/github][%d] getAuthCallbackGithubInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAuthCallbackGithubInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *GetAuthCallbackGithubInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
