/*
 	Copyright 2023 Loophole Labs

 	Licensed under the Apache License, Version 2.0 (the "License");
 	you may not use this file except in compliance with the License.
 	You may obtain a copy of the License at

 		   http://www.apache.org/licenses/LICENSE-2.0

 	Unless required by applicable law or agreed to in writing, software
 	distributed under the License is distributed on an "AS IS" BASIS,
 	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 	See the License for the specific language governing permissions and
 	limitations under the License.
*/

// Code generated by go-swagger; DO NOT EDIT.

package access

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteAccessInviteOrganizationReader is a Reader for the DeleteAccessInviteOrganization structure.
type DeleteAccessInviteOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAccessInviteOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAccessInviteOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAccessInviteOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteAccessInviteOrganizationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAccessInviteOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /access/invite/{organization}] DeleteAccessInviteOrganization", response, response.Code())
	}
}

// NewDeleteAccessInviteOrganizationOK creates a DeleteAccessInviteOrganizationOK with default headers values
func NewDeleteAccessInviteOrganizationOK() *DeleteAccessInviteOrganizationOK {
	return &DeleteAccessInviteOrganizationOK{}
}

/*
DeleteAccessInviteOrganizationOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAccessInviteOrganizationOK struct {
	Payload string
}

// IsSuccess returns true when this delete access invite organization o k response has a 2xx status code
func (o *DeleteAccessInviteOrganizationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete access invite organization o k response has a 3xx status code
func (o *DeleteAccessInviteOrganizationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access invite organization o k response has a 4xx status code
func (o *DeleteAccessInviteOrganizationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete access invite organization o k response has a 5xx status code
func (o *DeleteAccessInviteOrganizationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access invite organization o k response a status code equal to that given
func (o *DeleteAccessInviteOrganizationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete access invite organization o k response
func (o *DeleteAccessInviteOrganizationOK) Code() int {
	return 200
}

func (o *DeleteAccessInviteOrganizationOK) Error() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationOK  %+v", 200, o.Payload)
}

func (o *DeleteAccessInviteOrganizationOK) String() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationOK  %+v", 200, o.Payload)
}

func (o *DeleteAccessInviteOrganizationOK) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessInviteOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessInviteOrganizationBadRequest creates a DeleteAccessInviteOrganizationBadRequest with default headers values
func NewDeleteAccessInviteOrganizationBadRequest() *DeleteAccessInviteOrganizationBadRequest {
	return &DeleteAccessInviteOrganizationBadRequest{}
}

/*
DeleteAccessInviteOrganizationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAccessInviteOrganizationBadRequest struct {
	Payload string
}

// IsSuccess returns true when this delete access invite organization bad request response has a 2xx status code
func (o *DeleteAccessInviteOrganizationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access invite organization bad request response has a 3xx status code
func (o *DeleteAccessInviteOrganizationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access invite organization bad request response has a 4xx status code
func (o *DeleteAccessInviteOrganizationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete access invite organization bad request response has a 5xx status code
func (o *DeleteAccessInviteOrganizationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access invite organization bad request response a status code equal to that given
func (o *DeleteAccessInviteOrganizationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete access invite organization bad request response
func (o *DeleteAccessInviteOrganizationBadRequest) Code() int {
	return 400
}

func (o *DeleteAccessInviteOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAccessInviteOrganizationBadRequest) String() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteAccessInviteOrganizationBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessInviteOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessInviteOrganizationUnauthorized creates a DeleteAccessInviteOrganizationUnauthorized with default headers values
func NewDeleteAccessInviteOrganizationUnauthorized() *DeleteAccessInviteOrganizationUnauthorized {
	return &DeleteAccessInviteOrganizationUnauthorized{}
}

/*
DeleteAccessInviteOrganizationUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteAccessInviteOrganizationUnauthorized struct {
	Payload string
}

// IsSuccess returns true when this delete access invite organization unauthorized response has a 2xx status code
func (o *DeleteAccessInviteOrganizationUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access invite organization unauthorized response has a 3xx status code
func (o *DeleteAccessInviteOrganizationUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access invite organization unauthorized response has a 4xx status code
func (o *DeleteAccessInviteOrganizationUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete access invite organization unauthorized response has a 5xx status code
func (o *DeleteAccessInviteOrganizationUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete access invite organization unauthorized response a status code equal to that given
func (o *DeleteAccessInviteOrganizationUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete access invite organization unauthorized response
func (o *DeleteAccessInviteOrganizationUnauthorized) Code() int {
	return 401
}

func (o *DeleteAccessInviteOrganizationUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAccessInviteOrganizationUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteAccessInviteOrganizationUnauthorized) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessInviteOrganizationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAccessInviteOrganizationInternalServerError creates a DeleteAccessInviteOrganizationInternalServerError with default headers values
func NewDeleteAccessInviteOrganizationInternalServerError() *DeleteAccessInviteOrganizationInternalServerError {
	return &DeleteAccessInviteOrganizationInternalServerError{}
}

/*
DeleteAccessInviteOrganizationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAccessInviteOrganizationInternalServerError struct {
	Payload string
}

// IsSuccess returns true when this delete access invite organization internal server error response has a 2xx status code
func (o *DeleteAccessInviteOrganizationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete access invite organization internal server error response has a 3xx status code
func (o *DeleteAccessInviteOrganizationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete access invite organization internal server error response has a 4xx status code
func (o *DeleteAccessInviteOrganizationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete access invite organization internal server error response has a 5xx status code
func (o *DeleteAccessInviteOrganizationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete access invite organization internal server error response a status code equal to that given
func (o *DeleteAccessInviteOrganizationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete access invite organization internal server error response
func (o *DeleteAccessInviteOrganizationInternalServerError) Code() int {
	return 500
}

func (o *DeleteAccessInviteOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccessInviteOrganizationInternalServerError) String() string {
	return fmt.Sprintf("[DELETE /access/invite/{organization}][%d] deleteAccessInviteOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteAccessInviteOrganizationInternalServerError) GetPayload() string {
	return o.Payload
}

func (o *DeleteAccessInviteOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
